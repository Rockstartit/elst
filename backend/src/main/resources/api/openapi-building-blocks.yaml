openapi: 3.0.3
info:
  title: Building Block Repository
  description: E-Learning Specification Tool Building Blocks
  version: 1.0.0
servers:
  - url: http://localhost:8500
security:
  - bearerAuth: []
paths:
  /building-blocks:
    get:
      tags:
        - Building Block
      summary: Get all building blocks
      operationId: getBuildingBlocks
      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/BuildingBlock"
        401:
          description: Not Authenticated
    post:
      tags:
        - Building Block
      summary: Request new building block
      operationId: requestBuildingBlock
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestBuildingBlockRequest'
        required: true
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityId"
        400:
          description: Invalid Request
        401:
          description: Not Authenticated
  /building-blocks/{buildingBlockId}:
    get:
      tags:
        - Building Block
      summary: Get building block
      operationId: getBuildingBlock
      parameters:
        - name: buildingBlockId
          in: path
          description: Id of building block
          required: true
          schema:
            $ref: '#/components/schemas/EntityId'
      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BuildingBlock"
        401:
          description: Not Authenticated
    patch:
      tags:
        - Building Block
      summary: Edit building block
      operationId: editBuildingBlock
      parameters:
        - name: buildingBlockId
          in: path
          description: Id of building block
          required: true
          schema:
            $ref: '#/components/schemas/EntityId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditBuildingBlockRequest'
        required: true
      responses:
        200:
          description: Ok
        400:
          description: Invalid Request
        401:
          description: Not Authenticated
  /building-blocks/{buildingBlockId}/properties:
    put:
      tags:
        - Building Block
      summary: Edit building block properties
      operationId: editBuildingBlockProperties
      parameters:
        - name: buildingBlockId
          in: path
          description: Id of building block
          required: true
          schema:
            $ref: '#/components/schemas/EntityId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditBuildingBlockPropertiesRequest'
        required: true
      responses:
        200:
          description: Ok
        400:
          description: Invalid Request
        401:
          description: Not Authenticated
  /building-blocks/{buildingBlockId}/release:
    post:
      tags:
        - Building Block
      summary: Release building block
      operationId: releaseBuildingBlock
      parameters:
        - name: buildingBlockId
          in: path
          description: Id of building block
          required: true
          schema:
            $ref: '#/components/schemas/EntityId'
      responses:
        200:
          description: Ok
        400:
          description: Invalid Request
        401:
          description: Not Authenticated
  /building-blocks/{buildingBlockId}/mockups:
    get:
      tags:
        - Building Block Mockup
      summary: Get all building block mockups
      operationId: getAllMockups
      parameters:
        - name: buildingBlockId
          in: path
          description: Id of building block
          required: true
          schema:
            $ref: '#/components/schemas/EntityId'
      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "./openapi-courses.yaml#/components/schemas/Mockup"
        401:
          description: Not Authenticated
    post:
      tags:
        - Building Block Mockup
      summary: Upload mockup
      operationId: uploadMockup
      parameters:
        - name: buildingBlockId
          in: path
          description: Id of building block
          required: true
          schema:
            $ref: '#/components/schemas/EntityId'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                description:
                  type: string
                fileName:
                  type: string
                  format: binary
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityId'
        '400':
          description: Bad request, e.g., invalid file format
        '500':
          description: Internal server error
  /building-block-mockups/{mockupId}:
    patch:
      tags:
        - Building Block Mockup
      summary: Edit mockup
      operationId: editMockup
      parameters:
        - in: path
          name: mockupId
          description: ID of mockup
          required: true
          schema:
            $ref: '#/components/schemas/EntityId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditMockupRequest'
      responses:
        '200':
          description: Ok
        '400':
          description: Bad request, e.g., invalid file format
        '500':
          description: Internal server error
    delete:
      tags:
        - Building Block Mockup
      summary: Delete mockup
      operationId: deleteMockup
      parameters:
        - in: path
          name: mockupId
          description: Id of mockup
          required: true
          schema:
            $ref: '#/components/schemas/EntityId'
      responses:
        '200':
          description: Ok
        '400':
          description: Bad request, e.g., invalid file format
        '500':
          description: Internal server error
  /building-blocks/{buildingBlockId}/readme:
    get:
      tags:
        - Building Block ReadMe
      summary: Get building block readme
      operationId: getBuildingBlockReadMe
      parameters:
        - name: buildingBlockId
          in: path
          description: Id of building block
          required: true
          schema:
            $ref: '#/components/schemas/EntityId'
      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReadMe"
        401:
          description: Not Authenticated
    put:
      tags:
        - Building Block ReadMe
      summary: Edit building block readme
      operationId: editBuildingBlockReadMe
      parameters:
        - name: buildingBlockId
          in: path
          description: Id of building block
          required: true
          schema:
            $ref: '#/components/schemas/EntityId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditReadMeRequest'
        required: true
      responses:
        200:
          description: Ok
        400:
          description: Invalid Request
        401:
          description: Not Authenticated
components:
  schemas:
    ReadMe:
      type: string
      example: Inhalt einer Datei
    EditReadMeRequest:
      type: object
      required:
        - content
      properties:
        content:
          $ref: "#/components/schemas/ReadMe"
    BuildingBlock:
      type: object
      required:
        - id
        - name
        - properties
        - technology
        - releaseStatus
      properties:
        id:
          $ref: "#/components/schemas/EntityId"
        name:
          type: string
          example: Text
        description:
          type: string
          example: Eine Komponente zum Darstellen eines Textes.
        technology:
          type: string
          example: Vue
        properties:
          type: array
          items:
            $ref: "#/components/schemas/BuildingBlockProperty"
        releaseStatus:
          $ref: "#/components/schemas/ReleaseStatus"
    EditBuildingBlockPropertiesRequest:
      type: object
      required:
        - properties
      properties:
        properties:
          type: array
          items:
            $ref: "#/components/schemas/BuildingBlockProperty"
    RequestBuildingBlockRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          example: Text
        technology:
          type: string
          example: Vue
        description:
          type: string
          example: Eine Komponente zum Darstellen eines Textes.
    EditBuildingBlockRequest:
      type: object
      required:
        - name
        - technology
      properties:
        name:
          type: string
          example: Text
        description:
          type: string
          example: Eine Komponente zum Darstellen eines Textes.
        technology:
          type: string
          example: Vue
    BuildingBlockProperty:
      type: object
      properties:
        key:
          type: string
          example: value_1
        type:
          $ref: "#/components/schemas/BuildingBlockPropertyType"
        displayName:
          type: string
          example: Wert 1
        description:
          type: string
        order:
          type: number
          example: 0
    BuildingBlockPropertyType:
      type: string
      enum:
        - STRING
    ReleaseStatus:
      type: string
      enum:
        - IN_DEVELOPMENT
        - RELEASED
    EditMockupRequest:
      type: object
      required:
        - description
      properties:
        description:
          type: string
          example: Lernplan
    EntityId:
      type: string
      format: uuid
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT